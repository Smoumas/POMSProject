<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="poms.center.dao.IOrderDao" >
  <select id="selectOrderList" resultType="poms.center.entity.Order">
    select * 
    from `order`
    where stationID=#{stationID}
    limit #{begin},15
  </select>
  
  <select id="selectPromptOrderList" resultType="poms.center.entity.PromptOrder">
    select `order`.orderID,customer.customerName,customer.customerPhone,`order`.paymentState 
    from `order`,customer
    where `order`.customerID = customer.customerID and order.stationID=#{stationID} and `order`.paymentState > 0
  </select>
  
  
  <select id="selectNewspaperCount" resultType="poms.center.entity.NewspaperCount">
   SELECT s.stationName,n.newspaperName,ifnull(sum(orderNum),0)
   FROM `order` o,station s,newspaper n
   WHERE o.stationID = stationID AND o.newspaperID = n.newspaperID
   group by stationName,newspaperName
  </select>
  
  
  <insert id="insertOrder" parameterType="poms.center.entity.Order">
	insert into `order`
	<trim prefix="(" suffix=")" suffixOverrides="," >
		<if test="newspaperID != null">
			newspaperID,
		</if>
		<if test="customerID != null">
			customerID,
		</if>
		<if test="stationID != null">
			stationID,
		</if>
		<if test="orderType != null">
			orderType,
		</if>
		<if test="orderAddress != null">
			orderAddress,
		</if>
		<if test="orderNum != null">
			orderNum,
		</if>
		<if test="salerID != null">
			salerID,
		</if>
		<if test="orderDate != null">
			orderDate,
		</if>
		<if test="deliverDate != null">
			deliverDate,
		</if>
		<if test="orderKeepTime != null">
			orderKeepTime,
		</if>
		<if test="receiptType != null">
			receiptType,
		</if>
		<if test="paymentType != null">
			paymentType,
		</if>
		<if test="paymentState != null">
			paymentState,
		</if>
		<if test="deliverAreaID != null">
			deliverAreaID,
		</if>
		<if test="deliverID != null">
			deliverID,
		</if>
		<if test="isDelivered != null">
			isDelivered,
		</if>
		<if test="isPrinted != null">
			isPrinted,
		</if>
		<if test="frequency != null">
			frequency,
		</if>
		
	</trim>
	<trim prefix="values(" suffix=")" suffixOverrides=",">
		<if test="newspaperID != null">
			#{newspaperID},
		</if>
		<if test="customerID != null">
			#{customerID},
		</if>
		<if test="stationID != null">
			#{stationID},
		</if>
		<if test="orderType != null">
			#{orderType},
		</if>
		<if test="orderAddress != null">
			#{orderAddress},
		</if>
		<if test="orderNum != null">
			#{orderNum},
		</if>
		<if test="salerID != null">
			#{salerID},
		</if>
		<if test="orderDate != null">
			#{orderDate},
		</if>
		<if test="deliverDate != null">
			#{deliverDate},
		</if>
		<if test="orderKeepTime != null">
			#{orderKeepTime},
		</if>
		<if test="receiptType != null">
			#{receiptType},
		</if>
		<if test="paymentType != null">
			#{paymentType},
		</if>
		<if test="paymentState != null">
			#{paymentState},
		</if>
		<if test="deliverAreaID != null">
			#{deliverAreaID},
		</if>
		<if test="deliverID != null">
			#{deliverID},
		</if>
		<if test="isDelivered != null">
			#{isDelivered},
		</if>
		<if test="isPrinted != null">
			#{isPrinted},
		</if>
		<if test="frequency != null">
			#{frequency},
		</if>
	</trim> 
  </insert>
  
  <delete id="deleteOrder">
  	delete from `order` 
  	where orderID = #{orderID}
  </delete>
  
  <update id="updateOrder" parameterType="poms.center.entity.Order">
  	update `order`
  	<set>
		  <if test="newspaperID != null">
			newspaperID=#{newspaperID},
		</if>
		<if test="customerID != null">
			customerID=#{customerID},
		</if>
		<if test="stationID != null">
			stationID=#{stationID},
		</if>
		<if test="orderType != null">
			orderType=#{orderType},
		</if>
		<if test="orderAddress != null">
			orderAddress=#{orderAddress},
		</if>
		<if test="orderNum != null">
			orderNum=#{orderNum},
		</if>
		<if test="salerID != null">
			salerID=#{salerID},
		</if>
		<if test="orderDate != null">
			orderDate=#{orderDate},
		</if>
		<if test="deliverDate != null">
			deliverDate=#{deliverDate},
		</if>
		<if test="orderKeepTime != null">
			orderKeepTime=#{orderKeepTime},
		</if>
		<if test="receiptType != null">
			receiptType=#{receiptType},
		</if>
		<if test="paymentType != null">
			paymentType=#{paymentType},
		</if>
		<if test="paymentState != null">
			paymentState=#{paymentState},
		</if>
		<if test="deliverAreaID != null">
			deliverAreaID=#{deliverAreaID},
		</if>
		<if test="deliverID != null">
			deliverID=#{deliverID},
		</if>
		<if test="isDelivered != null">
			isDelivered=#{isDelivered},
		</if>
		<if test="isPrinted != null">
			isPrinted=#{isPrinted},
		</if>
		<if test="frequency != null">
			frequency=#{frequency},
		</if>
  	</set>
  	where orderID = #{orderID}
  </update>
  
  
  <select id="selectOrderByID" resultType="poms.center.entity.Order">
  	select * 
  	from `order`
  	where orderID=#{orderID} and stationID=#{stationID} 
  </select>
  
  <select id="selectOrderCountGroupByStation" resultType="poms.center.entity.OrderCount">
  	select `order`.stationID,station.stationName,count(orderID) as count
  	from `order`,station
  	where `order`.stationID = station.stationID
  	group by `order`.stationID
  </select>
  
  <select id="selectOrderCountGroupByStationAndDate" resultType="poms.center.entity.OrderCount">
  	select `order`.stationID,station.stationName,ifnull(sum(orderNum),0) as count
  	from `order`,station
  	where `order`.stationID = station.stationID and orderDate = #{date}
  	group by `order`.stationID
  	limit #{begin},15
  </select>
  
  
  <select id="selectCustomerPeriodOrder" resultType="poms.center.entity.Order">
  	select orderID,newspaperID,stationID,orderType,orderAddress,orderNum,orderDate
  	from `order`
  	where orderDate between #{beginDate} and #{endDate} and customerID=#{customerID} and stationID=#{stationID}
  	limit #{begin},15
  </select>
  
  <select id="selectOrderListByNewspaperName" resultType="poms.center.entity.Order">
  	select *
  	from `order`,newspaper
  	where `order`.newspaperID = newspaper.newspaperID 
  	and newspaper.newspaperName like CONCAT('%',#{newspaperName},'%' ) 
  	and `order`.stationID=#{stationID}
  	limit #{begin},15
  </select>
  
  <select id="selectOrderListByCustomerName" resultType="poms.center.entity.Order">
  	select *
  	from `order` natural join customer
  	where customerName like CONCAT('%',#{customerName},'%' ) and stationID=#{stationID}
  	limit #{begin},15
  </select>
  
  <select id="orderCount" resultType="java.lang.Integer">
  	select ifnull(sum(orderNum),0)
  	from `order`
  	where orderDate = #{orderDate} and stationID=#{stationID}
  </select>
  
  <select id="getCheckSumByPeriod" resultType="java.lang.Double">
		SELECT sum(credit)
		FROM orderPay op,`order` o
		WHERE o.orderID = op.orderID AND o.stationID = #(stationID) AND (o.paymentType = 2 OR o.paymentType = 3) AND o.orderDate BETWEEN #(startDate) AND #(endDate)
	</select>

	<select id="getCouponByPeriod" resultType="java.lang.Double">
		SELECT ifnull(sum(price),0)
		FROM coupon c,orderPay op,`order` o
		WHERE o.orderID = op.orderID AND op.couponID = c.couponID AND o.stationID = #(stationID) AND o.paymentType = 4 AND o.orderDate BETWEEN #(startDate) AND #(endDate)
	</select>

	<select id="getCashByPeriod" resultType="java.lang.Double">
		SELECT ifnull(sum(cash),0)
		FROM orderPay op,`order` o
		WHERE o.orderID = op.orderID AND o.stationID = #(stationID) AND (o.paymentType = 1 OR o.paymentType = 3) AND o.orderDate BETWEEN #(startDate) AND #(endDate)
	</select>

	<update id="updateOrderPay" parameterType="poms.center.entity.OrderPay">
		update orderPay
		<set>
			<if test="cash != null">
				cash=#{cash},
			</if>
			<if test="credit != null">
				cash=#{cash},
			</if>
			<if test="giftCardID != null">
				giftCardID=#{giftCardID},
			</if>
			<if test="couponID != null">
				couponID=#{couponID},
			</if>
		</set>
		where orderID = #{orderID}
	</update>
	
  
</mapper>